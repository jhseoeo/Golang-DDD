// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gofiber/fiber/v2"
	"github.com/jhseoeo/Golang-DDD/chapter6/recommendation/internal/recommendation"
	"net/http"
)

// Injectors from wire.go:

func InitializeRecommendationHandler(url string, app *fiber.App) (*recommendation.Handler, error) {
	client, err := newHttpClient()
	if err != nil {
		return nil, err
	}
	partnershipAdapter, err := recommendation.NewPartnershipAdapter(client, url)
	if err != nil {
		return nil, err
	}
	service, err := recommendation.NewService(partnershipAdapter)
	if err != nil {
		return nil, err
	}
	handler, err := recommendation.NewHandler(service, app)
	if err != nil {
		return nil, err
	}
	return handler, nil
}

// wire.go:

func newHttpClient() (*http.Client, error) {
	return &http.Client{}, nil
}
